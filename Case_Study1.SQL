
use assigment_23
-----------------------------------------------------------------------------------------------
1) Display number of states present in location table?

select distinct count(state) from location1 

-----------------------------------------------------------------------------------------------
2) How many products are of regular type ?

select type,count(type) from product group by type

-----------------------------------------------------------------------------------------------
3) How much spending has been done on marketing of product id 1 

select sum(total_expenses) as spending_productid_1 from fact where productid=1

-----------------------------------------------------------------------------------------------
4) What is the minimum sales of a product ? 

select count(*) from fact where productid=1

-----------------------------------------------------------------------------------------------
5) Display max Cost of Good Sold(COGS).

select max(cogs) from fact

-----------------------------------------------------------------------------------------------
6) Display the Details of the productid where product type is coffee

select * from product where product_type in('coffee')

-----------------------------------------------------------------------------------------------
7) Display the details where total_expenses is greater than 40.

select * from fact where total_expenses>40

-----------------------------------------------------------------------------------------------
8) What is the average sales in Area_Code 719 ?

select avg(sales) as Avg_sales from fact where Area_code=719

-----------------------------------------------------------------------------------------------
9) Find out the total profit generated by Colorado state. 

select * from product 
select * from location1
select * from fact

-----------------------------------------------------------------------------------------------
10) Display the average inventory for each product id. 

select productid,avg(inventory) as avg_inventory from fact group by productid

-----------------------------------------------------------------------------------------------
11) Display state in a sequential order in a location table. 

select * from location1 order by state 

-----------------------------------------------------------------------------------------------
12) Display the average budget margin where average budget margin should be greater than100

select avg(budget_margin) from fact where budget_margin>100

-----------------------------------------------------------------------------------------------
13) What is the total sales done on date 2010-01-01 

Select SUM(Sales) As Total_Sales from Fact where Date = '2010-01-01'


-----------------------------------------------------------------------------------------------
14) Display the average total expense of each product id on individual date

SELECT ProductID,DATE,AVG(Total_Expenses)AS AVG_TOTAL_EXPENCES FROM FACT 
GROUP BY ProductId,DATE
ORDER BY DATE, ProductId
----------------------------------------------------------------------------------------------------------------------
15) Display the table with the following attributes such as Date, 
productid, product_type, product, Sales, profit, state, area_code 

select fact.date, fact.productid, fact.sales, fact.profit,fact.area_code, product.product_type,
product.product, product.productid, location1.area_code, location1.state from fact inner join location1
on fact.area_code=location1.area_code inner join product on fact.productid=product.productid

select * from fact
---------------------------------------------------------------------------------------------------------------------------
16) Display the rank without any gap to show the Sales wise rank. 


--without gap will not skip the value
Select * , DENSE_RANK()Over(Order by Sales desc) as Sales_Rank
from Fact

--Reference
-- will allow or skip the value
Select * , RANK()Over(Order by Sales desc) as Sales_Rank
from Fact

-- Reference
Alter table Fact 
alter column Sales int

--NTILE
Select *, NTILE(5)Over(Order by Sales ) as Partition from Fact

Select *, NTILE(4) Over(Order by Product desc) as Product_NTILE from Product


---------------------------------------------------------------------------------------------------------------------------

17) Find the State wise Profit and Sales. 

select fact.profit, fact.sales, fact.area_code, location1.state, location1.area_code 
from fact inner join location1 on fact.area_code=location1.area_code

---------------------------------------------------------------------------------------------------------------------------
18) Find the State wise Profit and Sales along with the Product Name. 

select fact.sales, fact.profit, fact.area_code, fact.productid, location1.area_code, location1.state,
product.productid, product.product from fact inner join product on fact.productid=product.productid inner join 
location1 on fact.area_code=location1.area_code 

---------------------------------------------------------------------------------------------------------------------------
19) If there is an increase in sales of 5%. Calculate the increased sales. 


Select Sales as Actual_Sales, (Sales * 1.05) as Increased_Sales from Fact

--Reference

Create view Inc_Sales as
Select Sales as Actual_Sales, (Sales * 1.05) as Increased_Sales from Fact

--With function

Create function Increased_Sales (@val int)
returns int
as
begin 
	return @val * 1.05
end

Select Sales, dbo.Increased_Sales(Sales) from Fact



---------------------------------------------------------------------------------------------------------------------------
20) Find the maximum profit along with the Product id and Product Type. 

Select Fact.ProductId, Product_Type, Profit from Fact
join
Product
on 
Fact.ProductId = Product.ProductId
where Profit = (Select MAX(Profit) from Fact)


---------------------------------------------------------------------------------------------------------------------------
21) Create a Stored Procedure to fetch the result according to the product type from Product. 

create procedure fetch123 @product_type varchar(20)
as
select * from product where Product_Type=@product_type
go
exec fetch123 @product_type=coffee

---------------------------------------------------------------------------------------------------------------------------
22) Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss. 

select *,Grade=case when total_expenses<60 then 'Profit' else 'Loss' end from fact

---------------------------------------------------------------------------------------------------------------------------

23) Give the total weekly sales value with the Date and productid details. Use roll-up to pull the data in hierarchical order. 
data in hierarchical order.*/

Select Datepart (week,Date) as Week_Number, ProductId, SUM(Sales) as Total_Sales from Fact
group by Date, ProductId
with Rollup 

---------------------------------------------------------------------------------------------------------------------------
24) Apply union and intersection operator on the tables which consist of attribute area code.

Select Area_Code from Fact
union
Select Area_Code from Location

Select Area_Code from Fact
intersect
Select Area_Code from Location


---------------------------------------------------------------------------------------------------------------------------
25) Create a user-defined function for the product table to fetch a particular product type based upon the user’s preference.

--upon the user’s preference.

--Table-valued function

Create function P_type (@val varchar(25)) -- Input declaration
returns table -- Output declaration
as
   return
		select * from Product where Product_Type=@val

--Calling function
Select * from dbo.P_type ('Tea')
select * from dbo.P_type ('Herbal Tea')

-------------------------------------------------------------------------------------------------------------------------------
26) Change the product type from coffee to tea where product id is 1 and undo it.

begin transaction  
update Product set Product_Type='tea' where ProductId=1
rollback transaction
---------------------------------------------------------------------------------------------------------------------------
27) Display the Date, productid and sales where total expenses are between 100 to 200. 

select date, productid, sales from fact where total_expenses between 100 and 200

---------------------------------------------------------------------------------------------------------------------------
28) Delete the records in the product table for regular type. 
delete 

Delete Product where Type='Regular'


---------------------------------------------------------------------------------------------------------------------------
29) Display the ASCII value of the fifth character from the column product.


Select * from Product

Select Product,SUBSTRING(Product,5,1) as Fifth_Position, ASCII(SUBSTRING(Product,5,1)) As Ascii_value
from Product

Select Product,SUBSTRING(Product,5,3) as Fifth_Position
from Product



--Reference
Select ASCII(' ')
Select ASCII ('e')




select * from product 
select * from location1
select * from fact






















































































